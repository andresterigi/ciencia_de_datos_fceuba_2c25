# Librerias
library(tidyverse)
library(eph)
# Cargar datos
eph_usuarios <- eph::get_microdata(year=2025,period = 1,type='individual',vars='all')
eph_hogares <- eph::get_microdata(year=2025,period = 1,type='hogar',vars='all')
eph_hogares
# Ejercicio 1: Seleccion y filtrado basico----
t1 <- eph_usuarios %>%
select(CODUSU,NRO_HOGAR,COMPONENTE,CH04,CH06,NIVEL_ED,CH15,ESTADO,P21,PONDERA) %>%
filter(CH06 >= 25)
t1
# Ejercicio 2: Creacion de variables categoricas ----
t2 <- eph_usuarios %>%
mutate(sexo_desc = case_when(CH04 == 1 ~ 'Varón',
CH04 == 2 ~ 'Mujer',
TRUE ~ 'No especifica'),
nivel_educativo = case_when(NIVEL_ED == 1 ~ 'Primaria incomleta',
NIVEL_ED == 2 ~ 'Primaria completa',
NIVEL_ED == 3 ~ 'Secundaria incompleta',
NIVEL_ED == 4 ~ 'Secundaria completa',
NIVEL_ED == 5 ~ 'Superior incompleta',
NIVEL_ED == 6 ~ 'Superior completa',
NIVEL_ED == 7 ~ 'Sin instruccion',
TRUE ~ 'No sabe / No responde'),
condicion_actividad = case_when(ESTADO == 1 ~ 'Ocupado',
ESTADO == 2 ~ 'Desocupado',
ESTADO == 3 ~ 'Inactivo',
TRUE ~ 'No corresponde'))
# ejercicio 3: filtrado multiple ----
t3 <- eph_usuarios %>%
filter(ESTADO == 1 & (CH06 >= 30 & CH06 <= 60))
View(t3)
# ejercicio 3: filtrado multiple ----
t3 <- eph_usuarios %>%
filter(ESTADO == 1 & (CH06 >= 30 & CH06 <= 60) & CH15 %in% c(3,4,5))
# ejercicio 4: ordenamiento de datos ----
t4 <- eph_usuarios %>%
arrange(desc(NIVEL_ED) & CH06) %>%
filter(row_number() < 16)
# ejercicio 5: estadisticas por nivel educativo ----
t5 <- t2 %>%
group_by(nivel_educativo) %>%
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
edad_promedio = weighted.mean(CH06,PONDERA,na.rm=TRUE),
ingreso_promedio = weighted.mean(P21,PONDERA,na.rm=TRUE),
ocupados = sum(PONDERA[ESTADO == 1],na.rm=T)) %>%
ungroup() %>%
mutate(prop_ocupados = ocupados / sum(ocupados)) %>%
arrange(desc(ingreso_promedio))
# ejercicio 5: estadisticas por nivel educativo ----
t5 <- t2 %>%
group_by(nivel_educativo) %>%
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
edad_promedio = weighted.mean(CH06,PONDERA,na.rm=TRUE),
ingreso_promedio = weighted.mean(P21,PONDERA,na.rm=TRUE),
ocupados = sum(PONDERA[ESTADO == 1],na.rm=T)) #%>%
# ejercicio 5: estadisticas por nivel educativo ----
t5 <- t2 %>%
group_by(nivel_educativo) %>%
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
edad_promedio = weighted.mean(CH06,PONDERA,na.rm=TRUE),
ingreso_promedio = weighted.mean(P21,PONDERA,na.rm=TRUE))
# ejercicio 5: estadisticas por nivel educativo ----
t5 <- t2 %>%
group_by(nivel_educativo) %>%
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
edad_promedio = weighted.mean(CH06,PONDERA,na.rm=TRUE),
ingreso_promedio = weighted.mean(P21,PONDERA),
ocupados = sum(PONDERA[ESTADO == 1],na.rm=T)) %>%
ungroup() %>%
mutate(prop_ocupados = ocupados / sum(ocupados)) %>%
arrange(desc(ingreso_promedio))
# ejercicio 5: estadisticas por nivel educativo ----
t5 <- t2 %>%
group_by(nivel_educativo) %>%
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
edad_promedio = weighted.mean(CH06,PONDERA,na.rm=TRUE),
#ingreso_promedio = weighted.mean(P21,PONDERA,na.rm=TRUE),
ocupados = sum(PONDERA[ESTADO == 1],na.rm=T)) %>%
ungroup() %>%
mutate(prop_ocupados = ocupados / sum(ocupados)) %>%
arrange(desc(ingreso_promedio))
View(t2)
View(t2 %>% select(P21,PONDERA))
# ejercicio 5: estadisticas por nivel educativo ----
t5 <- t2 %>%
group_by(nivel_educativo) %>%
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
edad_promedio = weighted.mean(CH06,PONDERA,na.rm=TRUE),
ingreso_promedio = weighted.mean(P21[ESTADO == 1 & P21 > 100],PONDERA[ESTADO == 1 & P21 > 100],na.rm=TRUE),
ocupados = sum(PONDERA[ESTADO == 1],na.rm=T)) %>%
ungroup() %>%
mutate(prop_ocupados = ocupados / sum(ocupados)) %>%
arrange(desc(ingreso_promedio))
t5
# ejercicio 5: estadisticas por nivel educativo ----
t5 <- t2 %>%
mutate(P21_miles = P21 / 1000) %>%  # Pasar a miles
group_by(nivel_educativo) %>%
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
edad_promedio = weighted.mean(CH06,PONDERA,na.rm=TRUE),
ingreso_promedio = weighted.mean(P21_miles[ESTADO == 1 & P21_miles > 0.1],PONDERA[ESTADO == 1 & P21_miles > 0.1],na.rm=TRUE),
ocupados = sum(PONDERA[ESTADO == 1],na.rm=T)) %>%
ungroup() %>%
mutate(prop_ocupados = ocupados / sum(ocupados)) %>%
arrange(desc(ingreso_promedio))
View(t5)
t5 <- t2 %>%
mutate(P21_miles = P21 / 1000) %>%  # Pasar a miles el ingreso porque sino hace lio con el promedio ponderado
group_by(nivel_educativo) %>% # Agrupo por nivel educativo
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE), # Calculo cantidad de personas en la poblacion (con PONDERA)
edad_promedio = weighted.mean(CH06,PONDERA,na.rm=TRUE), # Promedio ponderado de la edad
ingreso_promedio = weighted.mean(P21_miles[ESTADO == 1 & P21_miles > 0.1],PONDERA[ESTADO == 1 & P21_miles > 0.1],na.rm=TRUE), # Filtramos ambas variables para considerar unicamente a los que tienen ocupacion y un ingreso mayor a 100 pesos como control
ocupados = sum(PONDERA[ESTADO == 1],na.rm=T)) %>%  # Solo consideramos a los ocupados (ESTADO == 1)
ungroup() %>%
mutate(prop_ocupados = ocupados / sum(ocupados)) %>%
arrange(desc(ingreso_promedio))
# Ejercicio 2: Creacion de variables categoricas ----
t2 <- eph_usuarios %>%
mutate(sexo_desc = case_when(CH04 == 1 ~ 'Varón',
CH04 == 2 ~ 'Mujer',
TRUE ~ 'No especifica'),
nivel_educativo = case_when(NIVEL_ED == 1 ~ 'Primaria incomleta',
NIVEL_ED == 2 ~ 'Primaria completa',
NIVEL_ED == 3 ~ 'Secundaria incompleta',
NIVEL_ED == 4 ~ 'Secundaria completa',
NIVEL_ED == 5 ~ 'Superior incompleta',
NIVEL_ED == 6 ~ 'Superior completa',
NIVEL_ED == 7 ~ 'Sin instruccion',
TRUE ~ 'No sabe / No responde'),
condicion_actividad = case_when(ESTADO == 1 ~ 'Ocupado',
ESTADO == 2 ~ 'Desocupado',
ESTADO == 3 ~ 'Inactivo',
TRUE ~ 'No corresponde'),
lugar_nacimiento = case_when(CH15 == 1 ~ 'En esta localidad',
CH15 == 2 ~ 'Otra localidad, misma prov.',
CH15 == 3 ~ 'Otra provincia',
CH15 == 4 ~ 'Pais limitrofe',
CH15 == 5 ~ 'Otro pais',
TRUE ~ 'No corresponde'))
ungroup() %>%
arrange(desc(prop_educacion_superior_completa))
# Ejercicio 6: estadisticas por lugar de nacimiento ----
t6 <- t2 %>%
mutate(P21_miles = P21 / 1000) %>%  # Pasar a miles el ingreso porque sino hace lio con el promedio ponderado
group_by(lugar_nacimiento) %>% # Agrupo por nivel educativo
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
prop_educacion_superior_completa =  sum(PONDERA[NIVEL_ED==6 & CH06 > 25] / sum(PONDERA[CH06 > 25])),
ingreso_promedio = weighted.mean(P21_miles[ESTADO == 1 & P21_miles > 0.1],PONDERA[ESTADO == 1 & P21_miles > 0.1],na.rm=TRUE), # Filtramos ambas variables para considerar unicamente a los que tienen ocupacion y un ingreso mayor a 100 pesos como control
edad_promedio = weighted.mean(CH06,PONDERA)) %>%
ungroup() %>%
arrange(desc(prop_educacion_superior_completa))
View(t6)
# Ejercicio 7: medidas de dispersion por nivel educativo
t7 <- t2 %>%
filter(ESTADO == 1) %>%
mutate(P21_miles = P21 / 1000) %>%  # Pasar a miles el ingreso porque sino hace lio con el promedio ponderado
group_by(nivel_educativo) %>%
summarize(desvio_ingreso = sd(P21_miles,na.rm=T),
coeficiente_variacion = sd(P21_miles,na.rm=T) / mean(P21_miles,na.rm=T) * 100,
ingreso_maximo = max(P21_miles),
ingreso_minimo = min(P21_miles),
rango = range(P21_miles)) %>%
ungroup() %>%
arrange(desc(coeficiente_variacion))
t7
# Ejercicio 7: medidas de dispersion por nivel educativo
t7 <- t2 %>%
filter(ESTADO == 1) %>%
filter(P21 > 1000) %>%
mutate(P21_miles = P21 / 1000) %>%  # Pasar a miles el ingreso porque sino hace lio con el promedio ponderado
group_by(nivel_educativo) %>%
summarize(desvio_ingreso = sd(P21_miles,na.rm=T),
coeficiente_variacion = sd(P21_miles,na.rm=T) / mean(P21_miles,na.rm=T) * 100,
ingreso_maximo = max(P21_miles),
ingreso_minimo = min(P21_miles),
rango = range(P21_miles)) %>%
ungroup() %>%
arrange(desc(coeficiente_variacion))
t7
# Ejercicio 7: medidas de dispersion por nivel educativo
t7 <- t2 %>%
filter(ESTADO == 1) %>%
filter(P21 > 1000) %>%
mutate(P21_miles = P21 / 1000) %>%  # Pasar a miles el ingreso porque sino hace lio con el promedio ponderado
group_by(nivel_educativo) %>%
summarize(desvio_ingreso = sd(P21_miles,na.rm=T),
coeficiente_variacion = sd(P21_miles,na.rm=T) / mean(P21_miles,na.rm=T) * 100,
ingreso_maximo = max(P21_miles),
ingreso_minimo = min(P21_miles),
rango = range(P21_miles)[2]-range(P21_miles)[1]) %>%
ungroup() %>%
arrange(desc(coeficiente_variacion))
t7
# Ejercicio 8: analisis por sexo y nivel educativo
t8 <- t2 %>%
mutate(P21_miles = P21 / 1000) %>%  # Pasar a miles el ingreso porque sino hace lio con el promedio ponderado
group_by(sexo_desc,nivel_educativo) %>%
summarize(poblacion = sum(PONDERA),
ingreso_promedio = weighted.mean(P21_miles[ESTADO == 1 & P21 > 1000],PONDERA[ESTADO == 1 & P21 > 1000]),
ocupacion = sum(PONDERA[ESTADO == 1 & CH06 > 15 & CH06 < 65]) / sum(PONDERA[CH06 > 15 & CH06 < 65])) %>%
ungroup()
t8
t8 <- t8 %>%
pivot_wider(names_from=sexo,values_from=c(poblacion,ingreso_promedio,ocupacion))
t8 <- t8 %>%
pivot_wider(names_from=sexo_desc,values_from=c(poblacion,ingreso_promedio,ocupacion))
t8
t8 <- t8 %>%
mutate(brecha_ingreso = (ingreso_promedio_Varón - ingreso_promedio_Mujer)/ingreso_promedio_Mujer)
t8
# Ejercicio 9: cuartiles de ingreso por nivel educativo
t9 <- t2 %>%
filter(ESTADO == 1) %>%
group_by(nivel_educativo) %>%
summarize(cuartil_1 = quantile(P21,0.25))
t9
# Ejercicio 9: cuartiles de ingreso por nivel educativo
t9 <- t2 %>%
filter(ESTADO == 1) %>%
group_by(nivel_educativo) %>%
summarize(cuartil_1 = quantile(P21,0.25),
cuartil_2 = quantile(P21,0.5),
cuartil_3 = quantile(P21,0.75),
cuartil_4 = quantile(P21,0.75) - quantile(P21,0.25))
# Ejercicio 9: cuartiles de ingreso por nivel educativo
t9 <- t2 %>%
filter(ESTADO == 1) %>%
group_by(nivel_educativo) %>%
summarize(cuartil_1 = quantile(P21,0.25),
cuartil_2 = quantile(P21,0.5),
cuartil_3 = quantile(P21,0.75),
iqr = quantile(P21,0.75) - quantile(P21,0.25))
t9
# Ejercicio 9: cuartiles de ingreso por nivel educativo
t9 <- t2 %>%
filter(ESTADO == 1) %>%
group_by(nivel_educativo) %>%
summarize(cuartil_1 = quantile(P21,0.25),
cuartil_2 = quantile(P21,0.5),
cuartil_3 = quantile(P21,0.75),
iqr = quantile(P21,0.75) - quantile(P21,0.25)) %>%
ungroup() %>%
arrange(desc(cuartil_2))
t9
ungroup() %>%
arrange(lugar_nacimiento,tasa_actividad)
# Ejercicio 10: estadisticas por lugar de nacimiento y sexo
t6 <- t2 %>%
mutate(P21_miles = P21 / 1000) %>%  # Pasar a miles el ingreso porque sino hace lio con el promedio ponderado
group_by(lugar_nacimiento,sexo_desc) %>% # Agrupo por nivel educativo
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
prop_secundario_completo_o_mas =  sum(PONDERA[NIVEL_ED %in% c(4,5,6) & CH06 > 25] / sum(PONDERA[CH06 > 25])),
tasa_actividad = sum(PONDERA[ESTADO == 1 & CH06 > 15 & CH06 < 65]) / sum(PONDERA[CH06 > 15 & CH06 < 65]),
edad_promedio = weighted.mean(CH06,PONDERA)) %>%
ungroup() %>%
arrange(lugar_nacimiento,tasa_actividad)
# Ejercicio 10: estadisticas por lugar de nacimiento y sexo
t10 <- t2 %>%
mutate(P21_miles = P21 / 1000) %>%  # Pasar a miles el ingreso porque sino hace lio con el promedio ponderado
group_by(lugar_nacimiento,sexo_desc) %>% # Agrupo por nivel educativo
summarize(cantidad_personas = sum(PONDERA,na.rm=TRUE),
prop_secundario_completo_o_mas =  sum(PONDERA[NIVEL_ED %in% c(4,5,6) & CH06 > 25] / sum(PONDERA[CH06 > 25])),
tasa_actividad = sum(PONDERA[ESTADO == 1 & CH06 > 15 & CH06 < 65]) / sum(PONDERA[CH06 > 15 & CH06 < 65]),
edad_promedio = weighted.mean(CH06,PONDERA)) %>%
ungroup() %>%
arrange(lugar_nacimiento,tasa_actividad)
View(t10)
